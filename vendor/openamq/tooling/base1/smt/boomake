#!/bin/sh
#
#   Boom builder for SMT 3.0c2
#   Generated by iMatix Boom from standard.pwl
#   
#   Copyright (c) 1996-2009 iMatix Corporation
#   All rights reserved.
#   
#   This file is licensed under the BSD license as follows:
#   
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions
#   are met:
#   
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of iMatix Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#   
#   THIS SOFTWARE IS PROVIDED BY IMATIX CORPORATION "AS IS" AND ANY
#   EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
#   PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL IMATIX CORPORATION BE
#   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#   BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#   Force environment variables to point to install location
#   Start by using final IBASE, then handle local -install path
#
boom_model_list () {
    set |
        awk 'BEGIN                      { FS="[=_]" }
             /^BOOM_MODEL_[A-Z0-9]*=1$/ { print $3  }'
}
boom_model_expand () {
    for MODEL in `boom_model_list`; do
        eval unset BOOM_MODEL_$MODEL
    done
    OLD_IFS=$IFS
    IFS=,
    for MODEL in $BOOM_MODEL; do
        MODEL=`echo $MODEL | tr \[a-z\] \[A-Z\]`
        eval BOOM_MODEL_$MODEL=1
        eval export BOOM_MODEL_$MODEL
    done
    IFS=$OLD_IFS
}
croak() {
    if [ -n "$*" ]; then
        echo "boom E: [smt]: $* - stop" 1>&2
    else
        echo "boom E: [smt]: stop" 1>&2
    fi
    exit 1
}
carp() {
    echo "boom I: [smt]: $*" 1>&2
}
trap 'croak "Interrupted"' INT
trap 'croak "Terminated"' TERM
trap 'croak "Quit"' QUIT
self=$0
MY_VERSION="3.0c2"
#
#   Set default values for BOOM_MODEL
#
#   Default is release,mt on all platforms.
#
if [ -z "$BOOM_MODEL" ]; then
    BOOM_MODEL=release,mt
fi
boom_model_expand
if [ "$BOOM_MODEL_RELEASE" != "1" ]; then
    if [ "$BOOM_MODEL_DEBUG" != "1" ]; then
        BOOM_MODEL_RELEASE=1
        BOOM_MODEL="$BOOM_MODEL,release"
    fi
fi
if [ "$BOOM_MODEL_ST" != "1" ]; then
    if [ "$BOOM_MODEL_MT" != "1" ]; then
            BOOM_MODEL="$BOOM_MODEL,mt"
    fi
fi
if [ -z "$IBASE" ]; then
    carp "The IBASE variable is not set.  Please set it to the location where SMT should be installed."
    exit 1
fi
if [ "$1" = "-v" ]; then
    BOOM_TRACE=1
    export BOOM_TRACE
    shift
fi
if [ "$1" != "-install" ]; then
    #   Normal use, use IBASE
    PATH=.:$IBASE/bin:$PATH; export PATH
    PERLLIB=.:$IBASE/bin:$PERLLIB; export PERLLIB
    INCDIR_ALT=$IBASE/include; export INCDIR_ALT
    _LOCAL_BASE=
    _INSTALL_ROOT=$IBASE
else
    #   Building product, we use -install directory first, then IBASE
    CURDIR=`pwd`
    cd $2
    _LOCAL_BASE=`pwd`
    cd $CURDIR
    PATH=.:$_LOCAL_BASE/bin:$IBASE/bin:$PATH; export PATH
    PERLLIB=.:$_LOCAL_BASE/bin:$IBASE/bin:$PERLLIB; export PERLLIB
    INCDIR_ALT=$_LOCAL_BASE/include:$IBASE/include; export INCDIR_ALT
    shift
    shift
    _INSTALL_ROOT=$_LOCAL_BASE
fi

# --------------------------   BUILD BINARY FILES   ---------------------------

a_build_binary_files() {
:
    carp "Building SMT..."
    #   To prevent compatibility warnings...
    INCDIR=
    LIBDIR=
    export LIBDIR INCDIR
    if [ "$BOOM_TRACE" ]; then
        MY_COPTS=-v
    else
        MY_COPTS=-q
    fi
    if [ -n "$_LOCAL_BASE" ]; then
        MY_COPTS="$MY_COPTS -li $_LOCAL_BASE/include -ll $_LOCAL_BASE/lib"
    fi
test -n "$BOOM_PIPELINE" && FREE_SLOTS=$BOOM_PIPELINE
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smtlib"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smtlib || croak "\"c $MY_COPTS smtlib\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smtlib || croak "\"c $MY_COPTS smtlib\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smtserv"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smtserv || croak "\"c $MY_COPTS smtserv\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smtserv || croak "\"c $MY_COPTS smtserv\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smttime"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smttime || croak "\"c $MY_COPTS smttime\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smttime || croak "\"c $MY_COPTS smttime\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smtecho"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smtecho || croak "\"c $MY_COPTS smtecho\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smtecho || croak "\"c $MY_COPTS smtecho\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smtlog"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smtlog || croak "\"c $MY_COPTS smtlog\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smtlog || croak "\"c $MY_COPTS smtlog\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smtxlog"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smtxlog || croak "\"c $MY_COPTS smtxlog\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smtxlog || croak "\"c $MY_COPTS smtxlog\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smtoper"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smtoper || croak "\"c $MY_COPTS smtoper\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smtoper || croak "\"c $MY_COPTS smtoper\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smtpipe"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smtpipe || croak "\"c $MY_COPTS smtpipe\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smtpipe || croak "\"c $MY_COPTS smtpipe\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smtpop"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smtpop || croak "\"c $MY_COPTS smtpop\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smtpop || croak "\"c $MY_COPTS smtpop\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smtrdns"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smtrdns || croak "\"c $MY_COPTS smtrdns\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smtrdns || croak "\"c $MY_COPTS smtrdns\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smtrdnsl"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smtrdnsl || croak "\"c $MY_COPTS smtrdnsl\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smtrdnsl || croak "\"c $MY_COPTS smtrdnsl\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smtsimu"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smtsimu || croak "\"c $MY_COPTS smtsimu\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smtsimu || croak "\"c $MY_COPTS smtsimu\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smtslot"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smtslot || croak "\"c $MY_COPTS smtslot\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smtslot || croak "\"c $MY_COPTS smtslot\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smtsmtp"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smtsmtp || croak "\"c $MY_COPTS smtsmtp\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smtsmtp || croak "\"c $MY_COPTS smtsmtp\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smtsock"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smtsock || croak "\"c $MY_COPTS smtsock\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smtsock || croak "\"c $MY_COPTS smtsock\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smttran"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smttran || croak "\"c $MY_COPTS smttran\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smttran || croak "\"c $MY_COPTS smttran\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smttst1"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smttst1 || croak "\"c $MY_COPTS smttst1\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smttst1 || croak "\"c $MY_COPTS smttst1\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smttst2"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smttst2 || croak "\"c $MY_COPTS smttst2\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smttst2 || croak "\"c $MY_COPTS smttst2\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smttst3"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smttst3 || croak "\"c $MY_COPTS smttst3\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smttst3 || croak "\"c $MY_COPTS smttst3\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS echocli"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS echocli || croak "\"c $MY_COPTS echocli\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS echocli || croak "\"c $MY_COPTS echocli\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS echod"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS echod || croak "\"c $MY_COPTS echod\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS echod || croak "\"c $MY_COPTS echod\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sysman"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS sysman || croak "\"c $MY_COPTS sysman\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS sysman || croak "\"c $MY_COPTS sysman\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS syscli"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS syscli || croak "\"c $MY_COPTS syscli\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS syscli || croak "\"c $MY_COPTS syscli\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sysmana"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS sysmana || croak "\"c $MY_COPTS sysmana\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS sysmana || croak "\"c $MY_COPTS sysmana\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS sysclia"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS sysclia || croak "\"c $MY_COPTS sysclia\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS sysclia || croak "\"c $MY_COPTS sysclia\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS tstpop"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS tstpop || croak "\"c $MY_COPTS tstpop\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS tstpop || croak "\"c $MY_COPTS tstpop\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS tstrdns"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS tstrdns || croak "\"c $MY_COPTS tstrdns\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS tstrdns || croak "\"c $MY_COPTS tstrdns\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS tstslot"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS tstslot || croak "\"c $MY_COPTS tstslot\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS tstslot || croak "\"c $MY_COPTS tstslot\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS tstsmtp"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS tstsmtp || croak "\"c $MY_COPTS tstsmtp\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS tstsmtp || croak "\"c $MY_COPTS tstsmtp\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS tstsock"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS tstsock || croak "\"c $MY_COPTS tstsock\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS tstsock || croak "\"c $MY_COPTS tstsock\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS tsttime"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS tsttime || croak "\"c $MY_COPTS tsttime\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS tsttime || croak "\"c $MY_COPTS tsttime\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smtmsg"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smtmsg || croak "\"c $MY_COPTS smtmsg\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smtmsg || croak "\"c $MY_COPTS smtmsg\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS smtsslm"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS smtsslm || croak "\"c $MY_COPTS smtsslm\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS smtsslm || croak "\"c $MY_COPTS smtsslm\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
test -n "$BOOM_PIPELINE" && wait
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smtlib"
    c $MY_COPTS -r libsmt3 smtlib || croak "\"c $MY_COPTS -r libsmt3 smtlib\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smtserv"
    c $MY_COPTS -r libsmt3 smtserv || croak "\"c $MY_COPTS -r libsmt3 smtserv\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smttime"
    c $MY_COPTS -r libsmt3 smttime || croak "\"c $MY_COPTS -r libsmt3 smttime\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smtecho"
    c $MY_COPTS -r libsmt3 smtecho || croak "\"c $MY_COPTS -r libsmt3 smtecho\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smtlog"
    c $MY_COPTS -r libsmt3 smtlog || croak "\"c $MY_COPTS -r libsmt3 smtlog\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smtxlog"
    c $MY_COPTS -r libsmt3 smtxlog || croak "\"c $MY_COPTS -r libsmt3 smtxlog\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smtoper"
    c $MY_COPTS -r libsmt3 smtoper || croak "\"c $MY_COPTS -r libsmt3 smtoper\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smtpipe"
    c $MY_COPTS -r libsmt3 smtpipe || croak "\"c $MY_COPTS -r libsmt3 smtpipe\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smtpop"
    c $MY_COPTS -r libsmt3 smtpop || croak "\"c $MY_COPTS -r libsmt3 smtpop\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smtrdns"
    c $MY_COPTS -r libsmt3 smtrdns || croak "\"c $MY_COPTS -r libsmt3 smtrdns\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smtrdnsl"
    c $MY_COPTS -r libsmt3 smtrdnsl || croak "\"c $MY_COPTS -r libsmt3 smtrdnsl\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smtsimu"
    c $MY_COPTS -r libsmt3 smtsimu || croak "\"c $MY_COPTS -r libsmt3 smtsimu\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smtslot"
    c $MY_COPTS -r libsmt3 smtslot || croak "\"c $MY_COPTS -r libsmt3 smtslot\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smtsmtp"
    c $MY_COPTS -r libsmt3 smtsmtp || croak "\"c $MY_COPTS -r libsmt3 smtsmtp\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smtsock"
    c $MY_COPTS -r libsmt3 smtsock || croak "\"c $MY_COPTS -r libsmt3 smtsock\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smttran"
    c $MY_COPTS -r libsmt3 smttran || croak "\"c $MY_COPTS -r libsmt3 smttran\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smttst1"
    c $MY_COPTS -r libsmt3 smttst1 || croak "\"c $MY_COPTS -r libsmt3 smttst1\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smttst2"
    c $MY_COPTS -r libsmt3 smttst2 || croak "\"c $MY_COPTS -r libsmt3 smttst2\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smttst3"
    c $MY_COPTS -r libsmt3 smttst3 || croak "\"c $MY_COPTS -r libsmt3 smttst3\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 sysmana"
    c $MY_COPTS -r libsmt3 sysmana || croak "\"c $MY_COPTS -r libsmt3 sysmana\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 sysclia"
    c $MY_COPTS -r libsmt3 sysclia || croak "\"c $MY_COPTS -r libsmt3 sysclia\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smtmsg"
    c $MY_COPTS -r libsmt3 smtmsg || croak "\"c $MY_COPTS -r libsmt3 smtmsg\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -r libsmt3 smtsslm"
    c $MY_COPTS -r libsmt3 smtsslm || croak "\"c $MY_COPTS -r libsmt3 smtsslm\" failed"
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L echocli"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS -L echocli || croak "\"c $MY_COPTS -L echocli\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS -L echocli || croak "\"c $MY_COPTS -L echocli\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L echod"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS -L echod || croak "\"c $MY_COPTS -L echod\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS -L echod || croak "\"c $MY_COPTS -L echod\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L sysman"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS -L sysman || croak "\"c $MY_COPTS -L sysman\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS -L sysman || croak "\"c $MY_COPTS -L sysman\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L syscli"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS -L syscli || croak "\"c $MY_COPTS -L syscli\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS -L syscli || croak "\"c $MY_COPTS -L syscli\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L tstpop"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS -L tstpop || croak "\"c $MY_COPTS -L tstpop\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS -L tstpop || croak "\"c $MY_COPTS -L tstpop\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L tstrdns"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS -L tstrdns || croak "\"c $MY_COPTS -L tstrdns\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS -L tstrdns || croak "\"c $MY_COPTS -L tstrdns\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L tstslot"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS -L tstslot || croak "\"c $MY_COPTS -L tstslot\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS -L tstslot || croak "\"c $MY_COPTS -L tstslot\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L tstsmtp"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS -L tstsmtp || croak "\"c $MY_COPTS -L tstsmtp\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS -L tstsmtp || croak "\"c $MY_COPTS -L tstsmtp\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L tstsock"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS -L tstsock || croak "\"c $MY_COPTS -L tstsock\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS -L tstsock || croak "\"c $MY_COPTS -L tstsock\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
    [ "$BOOM_TRACE" ] && echo "c $MY_COPTS -L tsttime"
    if [ -z "$BOOM_PIPELINE" ]; then
        c $MY_COPTS -L tsttime || croak "\"c $MY_COPTS -L tsttime\" failed"
    else
        if [ "$FREE_SLOTS" = "0" ]; then
            wait
            FREE_SLOTS=$BOOM_PIPELINE
        fi
        c $MY_COPTS -L tsttime || croak "\"c $MY_COPTS -L tsttime\" failed" &
        FREE_SLOTS=`expr $FREE_SLOTS - 1`
    fi
test -n "$BOOM_PIPELINE" && wait
}

# -------------------------   BUILD SOURCE PACKAGES   -------------------------

a_build_source_packages() {
:
    rm -f _package.lst
    if [ -f "version.h" ]; then
        echo version.h>>_package.lst
    fi
    if [ -f "smtlib.c" ]; then
        echo smtlib.c>>_package.lst
    fi
    if [ -f "smtlib.h" ]; then
        echo smtlib.h>>_package.lst
    fi
    if [ -f "smtserv.c" ]; then
        echo smtserv.c>>_package.lst
    fi
    if [ -f "smttime.c" ]; then
        echo smttime.c>>_package.lst
    fi
    if [ -f "smtecho.c" ]; then
        echo smtecho.c>>_package.lst
    fi
    if [ -f "smtlog.c" ]; then
        echo smtlog.c>>_package.lst
    fi
    if [ -f "smtxlog.c" ]; then
        echo smtxlog.c>>_package.lst
    fi
    if [ -f "smtoper.c" ]; then
        echo smtoper.c>>_package.lst
    fi
    if [ -f "smtpipe.c" ]; then
        echo smtpipe.c>>_package.lst
    fi
    if [ -f "smtpop.c" ]; then
        echo smtpop.c>>_package.lst
    fi
    if [ -f "smtrdns.c" ]; then
        echo smtrdns.c>>_package.lst
    fi
    if [ -f "smtrdnsl.c" ]; then
        echo smtrdnsl.c>>_package.lst
    fi
    if [ -f "smtsimu.c" ]; then
        echo smtsimu.c>>_package.lst
    fi
    if [ -f "smtsimu.h" ]; then
        echo smtsimu.h>>_package.lst
    fi
    if [ -f "smtslot.c" ]; then
        echo smtslot.c>>_package.lst
    fi
    if [ -f "smtsmtp.c" ]; then
        echo smtsmtp.c>>_package.lst
    fi
    if [ -f "smtsock.c" ]; then
        echo smtsock.c>>_package.lst
    fi
    if [ -f "smttran.c" ]; then
        echo smttran.c>>_package.lst
    fi
    if [ -f "smttst1.c" ]; then
        echo smttst1.c>>_package.lst
    fi
    if [ -f "smttst2.c" ]; then
        echo smttst2.c>>_package.lst
    fi
    if [ -f "smttst3.c" ]; then
        echo smttst3.c>>_package.lst
    fi
    if [ -f "smtmem.h" ]; then
        echo smtmem.h>>_package.lst
    fi
    if [ -f "smtdefn.h" ]; then
        echo smtdefn.h>>_package.lst
    fi
    if [ -f "smthead.h" ]; then
        echo smthead.h>>_package.lst
    fi
    if [ -f "smtpriv.h" ]; then
        echo smtpriv.h>>_package.lst
    fi
    if [ -f "smtxlog.h" ]; then
        echo smtxlog.h>>_package.lst
    fi
    if [ -f "echocli.c" ]; then
        echo echocli.c>>_package.lst
    fi
    if [ -f "echod.c" ]; then
        echo echod.c>>_package.lst
    fi
    if [ -f "smtschm.c" ]; then
        echo smtschm.c>>_package.lst
    fi
    if [ -f "smttest.gsl" ]; then
        echo smttest.gsl>>_package.lst
    fi
    if [ -f "smtexdr.gsl" ]; then
        echo smtexdr.gsl>>_package.lst
    fi
    if [ -f "smtmesg.gsl" ]; then
        echo smtmesg.gsl>>_package.lst
    fi
    if [ -f "smtmsg.xml" ]; then
        echo smtmsg.xml>>_package.lst
    fi
    if [ -f "smtsslm.xml" ]; then
        echo smtsslm.xml>>_package.lst
    fi
    if [ -f "sysman.c" ]; then
        echo sysman.c>>_package.lst
    fi
    if [ -f "syscli.c" ]; then
        echo syscli.c>>_package.lst
    fi
    if [ -f "sysmana.c" ]; then
        echo sysmana.c>>_package.lst
    fi
    if [ -f "sysclia.c" ]; then
        echo sysclia.c>>_package.lst
    fi
    if [ -f "sysman.h" ]; then
        echo sysman.h>>_package.lst
    fi
    if [ -f "tstpop.c" ]; then
        echo tstpop.c>>_package.lst
    fi
    if [ -f "tstpop.l" ]; then
        echo tstpop.l>>_package.lst
    fi
    if [ -f "tstpop.cfg" ]; then
        echo tstpop.cfg>>_package.lst
    fi
    if [ -f "tstrdns.c" ]; then
        echo tstrdns.c>>_package.lst
    fi
    if [ -f "tstslot.c" ]; then
        echo tstslot.c>>_package.lst
    fi
    if [ -f "tstsmtp.c" ]; then
        echo tstsmtp.c>>_package.lst
    fi
    if [ -f "tstsmtp.l" ]; then
        echo tstsmtp.l>>_package.lst
    fi
    if [ -f "tstsmtp.cfg" ]; then
        echo tstsmtp.cfg>>_package.lst
    fi
    if [ -f "tstsock.c" ]; then
        echo tstsock.c>>_package.lst
    fi
    if [ -f "tsttime.c" ]; then
        echo tsttime.c>>_package.lst
    fi
    if [ -f "prelude.pdl" ]; then
        echo prelude.pdl>>_package.lst
    fi
    if [ -f "license.gpl" ]; then
        echo license.gpl>>_package.lst
    fi
    if [ -f "project.pdl" ]; then
        echo project.pdl>>_package.lst
    fi
    if [ -f "readme.txt" ]; then
        echo readme.txt>>_package.lst
    fi
    if [ -f "smtserv.h" ]; then
        echo smtserv.h>>_package.lst
    fi
    if [ -f "smttime.h" ]; then
        echo smttime.h>>_package.lst
    fi
    if [ -f "smtecho.l" ]; then
        echo smtecho.l>>_package.lst
    fi
    if [ -f "smtecho.i" ]; then
        echo smtecho.i>>_package.lst
    fi
    if [ -f "smtecho.d" ]; then
        echo smtecho.d>>_package.lst
    fi
    if [ -f "smtlog.l" ]; then
        echo smtlog.l>>_package.lst
    fi
    if [ -f "smtlog.i" ]; then
        echo smtlog.i>>_package.lst
    fi
    if [ -f "smtlog.d" ]; then
        echo smtlog.d>>_package.lst
    fi
    if [ -f "smtxlog.l" ]; then
        echo smtxlog.l>>_package.lst
    fi
    if [ -f "smtxlog.i" ]; then
        echo smtxlog.i>>_package.lst
    fi
    if [ -f "smtxlog.d" ]; then
        echo smtxlog.d>>_package.lst
    fi
    if [ -f "smtoper.l" ]; then
        echo smtoper.l>>_package.lst
    fi
    if [ -f "smtoper.i" ]; then
        echo smtoper.i>>_package.lst
    fi
    if [ -f "smtoper.d" ]; then
        echo smtoper.d>>_package.lst
    fi
    if [ -f "smtpipe.l" ]; then
        echo smtpipe.l>>_package.lst
    fi
    if [ -f "smtpipe.i" ]; then
        echo smtpipe.i>>_package.lst
    fi
    if [ -f "smtpipe.d" ]; then
        echo smtpipe.d>>_package.lst
    fi
    if [ -f "smtpop.l" ]; then
        echo smtpop.l>>_package.lst
    fi
    if [ -f "smtpop.i" ]; then
        echo smtpop.i>>_package.lst
    fi
    if [ -f "smtpop.d" ]; then
        echo smtpop.d>>_package.lst
    fi
    if [ -f "smtrdns.l" ]; then
        echo smtrdns.l>>_package.lst
    fi
    if [ -f "smtrdns.i" ]; then
        echo smtrdns.i>>_package.lst
    fi
    if [ -f "smtrdns.d" ]; then
        echo smtrdns.d>>_package.lst
    fi
    if [ -f "smtrdnsl.h" ]; then
        echo smtrdnsl.h>>_package.lst
    fi
    if [ -f "smtsimu.l" ]; then
        echo smtsimu.l>>_package.lst
    fi
    if [ -f "smtsimu.i" ]; then
        echo smtsimu.i>>_package.lst
    fi
    if [ -f "smtsimu.d" ]; then
        echo smtsimu.d>>_package.lst
    fi
    if [ -f "smtslot.l" ]; then
        echo smtslot.l>>_package.lst
    fi
    if [ -f "smtslot.i" ]; then
        echo smtslot.i>>_package.lst
    fi
    if [ -f "smtslot.d" ]; then
        echo smtslot.d>>_package.lst
    fi
    if [ -f "smtsmtp.l" ]; then
        echo smtsmtp.l>>_package.lst
    fi
    if [ -f "smtsmtp.i" ]; then
        echo smtsmtp.i>>_package.lst
    fi
    if [ -f "smtsmtp.d" ]; then
        echo smtsmtp.d>>_package.lst
    fi
    if [ -f "smtsock.l" ]; then
        echo smtsock.l>>_package.lst
    fi
    if [ -f "smtsock.i" ]; then
        echo smtsock.i>>_package.lst
    fi
    if [ -f "smtsock.d" ]; then
        echo smtsock.d>>_package.lst
    fi
    if [ -f "smttran.l" ]; then
        echo smttran.l>>_package.lst
    fi
    if [ -f "smttran.i" ]; then
        echo smttran.i>>_package.lst
    fi
    if [ -f "smttran.d" ]; then
        echo smttran.d>>_package.lst
    fi
    if [ -f "smttst1.l" ]; then
        echo smttst1.l>>_package.lst
    fi
    if [ -f "smttst1.i" ]; then
        echo smttst1.i>>_package.lst
    fi
    if [ -f "smttst1.d" ]; then
        echo smttst1.d>>_package.lst
    fi
    if [ -f "smttst2.l" ]; then
        echo smttst2.l>>_package.lst
    fi
    if [ -f "smttst2.i" ]; then
        echo smttst2.i>>_package.lst
    fi
    if [ -f "smttst2.d" ]; then
        echo smttst2.d>>_package.lst
    fi
    if [ -f "smttst3.l" ]; then
        echo smttst3.l>>_package.lst
    fi
    if [ -f "smttst3.i" ]; then
        echo smttst3.i>>_package.lst
    fi
    if [ -f "smttst3.d" ]; then
        echo smttst3.d>>_package.lst
    fi
    if [ -f "smtmsg.c" ]; then
        echo smtmsg.c>>_package.lst
    fi
    if [ -f "smtmsg.h" ]; then
        echo smtmsg.h>>_package.lst
    fi
    if [ -f "smtsslm.c" ]; then
        echo smtsslm.c>>_package.lst
    fi
    if [ -f "smtsslm.h" ]; then
        echo smtsslm.h>>_package.lst
    fi
    if [ -f "sysmana.l" ]; then
        echo sysmana.l>>_package.lst
    fi
    if [ -f "sysmana.i" ]; then
        echo sysmana.i>>_package.lst
    fi
    if [ -f "sysmana.d" ]; then
        echo sysmana.d>>_package.lst
    fi
    if [ -f "sysclia.l" ]; then
        echo sysclia.l>>_package.lst
    fi
    if [ -f "sysclia.i" ]; then
        echo sysclia.i>>_package.lst
    fi
    if [ -f "sysclia.d" ]; then
        echo sysclia.d>>_package.lst
    fi
    if [ -f "tstpop.i" ]; then
        echo tstpop.i>>_package.lst
    fi
    if [ -f "tstpop.d" ]; then
        echo tstpop.d>>_package.lst
    fi
    if [ -f "tstsmtp.i" ]; then
        echo tstsmtp.i>>_package.lst
    fi
    if [ -f "tstsmtp.d" ]; then
        echo tstsmtp.d>>_package.lst
    fi
    if [ -f "smt3.h" ]; then
        echo smt3.h>>_package.lst
    fi
    if [ -f "stamp_generate" ]; then
        echo stamp_generate>>_package.lst
    fi
    if [ -f "boomakew.bat" ]; then
        echo boomakew.bat>>_package.lst
    fi
    if [ -f "configure" ]; then
        echo configure>>_package.lst
    fi
    if [ -f "Makefile.unix" ]; then
        echo Makefile.unix>>_package.lst
    fi
    if [ -f "boomake" ]; then
        echo boomake>>_package.lst
    fi
    if [ -f "configure.bat" ]; then
        echo configure.bat>>_package.lst
    fi
    if [ -f "Makefile.win32" ]; then
        echo Makefile.win32>>_package.lst
    fi
    if [ -f "boomake.bat" ]; then
        echo boomake.bat>>_package.lst
    fi
    if [ -f "libsmt3.vcproj" ]; then
        echo libsmt3.vcproj>>_package.lst
    fi
    echo "Source package successfully generated">stamp_source
    echo "stamp_source">>_package.lst
    carp "Building smt-$MY_VERSION-src.tar.gz..."
    zip  -rq _package.zip -@<_package.lst
    unzip -q _package.zip -d smt-$MY_VERSION
    rm -f smt-$MY_VERSION-src.tar.gz
    tar -cf  smt-$MY_VERSION-src.tar smt-$MY_VERSION
    gzip smt-$MY_VERSION-src.tar
    rm -f smt-$MY_VERSION-src.zip
    carp "Building smt-$MY_VERSION-src.zip..."
    zip -lrmq smt-$MY_VERSION-src.zip smt-$MY_VERSION
    rm _package.zip
    rm _package.lst
    rm stamp_source
}

# ---------------------   CHECK ALL SOURCE FILES EXIST   ----------------------

a_check_all_source_files_exist() {
:
    if [ ! -f "version.h" ]; then
        croak "version.h is missing"
    fi
    if [ ! -f "smtlib.c" ]; then
        croak "smtlib.c is missing"
    fi
    if [ ! -f "smtlib.h" ]; then
        croak "smtlib.h is missing"
    fi
    if [ ! -f "smtserv.c" ]; then
        croak "smtserv.c is missing"
    fi
    if [ ! -f "smttime.c" ]; then
        croak "smttime.c is missing"
    fi
    if [ ! -f "smtecho.c" ]; then
        croak "smtecho.c is missing"
    fi
    if [ ! -f "smtlog.c" ]; then
        croak "smtlog.c is missing"
    fi
    if [ ! -f "smtxlog.c" ]; then
        croak "smtxlog.c is missing"
    fi
    if [ ! -f "smtoper.c" ]; then
        croak "smtoper.c is missing"
    fi
    if [ ! -f "smtpipe.c" ]; then
        croak "smtpipe.c is missing"
    fi
    if [ ! -f "smtpop.c" ]; then
        croak "smtpop.c is missing"
    fi
    if [ ! -f "smtrdns.c" ]; then
        croak "smtrdns.c is missing"
    fi
    if [ ! -f "smtrdnsl.c" ]; then
        croak "smtrdnsl.c is missing"
    fi
    if [ ! -f "smtsimu.c" ]; then
        croak "smtsimu.c is missing"
    fi
    if [ ! -f "smtsimu.h" ]; then
        croak "smtsimu.h is missing"
    fi
    if [ ! -f "smtslot.c" ]; then
        croak "smtslot.c is missing"
    fi
    if [ ! -f "smtsmtp.c" ]; then
        croak "smtsmtp.c is missing"
    fi
    if [ ! -f "smtsock.c" ]; then
        croak "smtsock.c is missing"
    fi
    if [ ! -f "smttran.c" ]; then
        croak "smttran.c is missing"
    fi
    if [ ! -f "smttst1.c" ]; then
        croak "smttst1.c is missing"
    fi
    if [ ! -f "smttst2.c" ]; then
        croak "smttst2.c is missing"
    fi
    if [ ! -f "smttst3.c" ]; then
        croak "smttst3.c is missing"
    fi
    if [ ! -f "smtmem.h" ]; then
        croak "smtmem.h is missing"
    fi
    if [ ! -f "smtdefn.h" ]; then
        croak "smtdefn.h is missing"
    fi
    if [ ! -f "smthead.h" ]; then
        croak "smthead.h is missing"
    fi
    if [ ! -f "smtpriv.h" ]; then
        croak "smtpriv.h is missing"
    fi
    if [ ! -f "smtxlog.h" ]; then
        croak "smtxlog.h is missing"
    fi
    if [ ! -f "echocli.c" ]; then
        croak "echocli.c is missing"
    fi
    if [ ! -f "echod.c" ]; then
        croak "echod.c is missing"
    fi
    if [ ! -f "smtschm.c" ]; then
        croak "smtschm.c is missing"
    fi
    if [ ! -f "smttest.gsl" ]; then
        croak "smttest.gsl is missing"
    fi
    if [ ! -f "smtexdr.gsl" ]; then
        croak "smtexdr.gsl is missing"
    fi
    if [ ! -f "smtmesg.gsl" ]; then
        croak "smtmesg.gsl is missing"
    fi
    if [ ! -f "smtmsg.xml" ]; then
        croak "smtmsg.xml is missing"
    fi
    if [ ! -f "smtsslm.xml" ]; then
        croak "smtsslm.xml is missing"
    fi
    if [ ! -f "sysman.c" ]; then
        croak "sysman.c is missing"
    fi
    if [ ! -f "syscli.c" ]; then
        croak "syscli.c is missing"
    fi
    if [ ! -f "sysmana.c" ]; then
        croak "sysmana.c is missing"
    fi
    if [ ! -f "sysclia.c" ]; then
        croak "sysclia.c is missing"
    fi
    if [ ! -f "sysman.h" ]; then
        croak "sysman.h is missing"
    fi
    if [ ! -f "tstpop.c" ]; then
        croak "tstpop.c is missing"
    fi
    if [ ! -f "tstpop.l" ]; then
        croak "tstpop.l is missing"
    fi
    if [ ! -f "tstpop.cfg" ]; then
        croak "tstpop.cfg is missing"
    fi
    if [ ! -f "tstrdns.c" ]; then
        croak "tstrdns.c is missing"
    fi
    if [ ! -f "tstslot.c" ]; then
        croak "tstslot.c is missing"
    fi
    if [ ! -f "tstsmtp.c" ]; then
        croak "tstsmtp.c is missing"
    fi
    if [ ! -f "tstsmtp.l" ]; then
        croak "tstsmtp.l is missing"
    fi
    if [ ! -f "tstsmtp.cfg" ]; then
        croak "tstsmtp.cfg is missing"
    fi
    if [ ! -f "tstsock.c" ]; then
        croak "tstsock.c is missing"
    fi
    if [ ! -f "tsttime.c" ]; then
        croak "tsttime.c is missing"
    fi
    if [ ! -f "project.pdl" ]; then
        croak "project.pdl is missing"
    fi
    if [ ! -f "readme.txt" ]; then
        croak "readme.txt is missing"
    fi
    if [ ! -f "smtserv.h" ]; then
        croak "smtserv.h is missing"
    fi
    if [ ! -f "smttime.h" ]; then
        croak "smttime.h is missing"
    fi
    if [ ! -f "smtecho.l" ]; then
        croak "smtecho.l is missing"
    fi
    if [ ! -f "smtecho.i" ]; then
        croak "smtecho.i is missing"
    fi
    if [ ! -f "smtecho.d" ]; then
        croak "smtecho.d is missing"
    fi
    if [ ! -f "smtlog.l" ]; then
        croak "smtlog.l is missing"
    fi
    if [ ! -f "smtlog.i" ]; then
        croak "smtlog.i is missing"
    fi
    if [ ! -f "smtlog.d" ]; then
        croak "smtlog.d is missing"
    fi
    if [ ! -f "smtxlog.l" ]; then
        croak "smtxlog.l is missing"
    fi
    if [ ! -f "smtxlog.i" ]; then
        croak "smtxlog.i is missing"
    fi
    if [ ! -f "smtxlog.d" ]; then
        croak "smtxlog.d is missing"
    fi
    if [ ! -f "smtoper.l" ]; then
        croak "smtoper.l is missing"
    fi
    if [ ! -f "smtoper.i" ]; then
        croak "smtoper.i is missing"
    fi
    if [ ! -f "smtoper.d" ]; then
        croak "smtoper.d is missing"
    fi
    if [ ! -f "smtpipe.l" ]; then
        croak "smtpipe.l is missing"
    fi
    if [ ! -f "smtpipe.i" ]; then
        croak "smtpipe.i is missing"
    fi
    if [ ! -f "smtpipe.d" ]; then
        croak "smtpipe.d is missing"
    fi
    if [ ! -f "smtpop.l" ]; then
        croak "smtpop.l is missing"
    fi
    if [ ! -f "smtpop.i" ]; then
        croak "smtpop.i is missing"
    fi
    if [ ! -f "smtpop.d" ]; then
        croak "smtpop.d is missing"
    fi
    if [ ! -f "smtrdns.l" ]; then
        croak "smtrdns.l is missing"
    fi
    if [ ! -f "smtrdns.i" ]; then
        croak "smtrdns.i is missing"
    fi
    if [ ! -f "smtrdns.d" ]; then
        croak "smtrdns.d is missing"
    fi
    if [ ! -f "smtrdnsl.h" ]; then
        croak "smtrdnsl.h is missing"
    fi
    if [ ! -f "smtsimu.l" ]; then
        croak "smtsimu.l is missing"
    fi
    if [ ! -f "smtsimu.i" ]; then
        croak "smtsimu.i is missing"
    fi
    if [ ! -f "smtsimu.d" ]; then
        croak "smtsimu.d is missing"
    fi
    if [ ! -f "smtslot.l" ]; then
        croak "smtslot.l is missing"
    fi
    if [ ! -f "smtslot.i" ]; then
        croak "smtslot.i is missing"
    fi
    if [ ! -f "smtslot.d" ]; then
        croak "smtslot.d is missing"
    fi
    if [ ! -f "smtsmtp.l" ]; then
        croak "smtsmtp.l is missing"
    fi
    if [ ! -f "smtsmtp.i" ]; then
        croak "smtsmtp.i is missing"
    fi
    if [ ! -f "smtsmtp.d" ]; then
        croak "smtsmtp.d is missing"
    fi
    if [ ! -f "smtsock.l" ]; then
        croak "smtsock.l is missing"
    fi
    if [ ! -f "smtsock.i" ]; then
        croak "smtsock.i is missing"
    fi
    if [ ! -f "smtsock.d" ]; then
        croak "smtsock.d is missing"
    fi
    if [ ! -f "smttran.l" ]; then
        croak "smttran.l is missing"
    fi
    if [ ! -f "smttran.i" ]; then
        croak "smttran.i is missing"
    fi
    if [ ! -f "smttran.d" ]; then
        croak "smttran.d is missing"
    fi
    if [ ! -f "smttst1.l" ]; then
        croak "smttst1.l is missing"
    fi
    if [ ! -f "smttst1.i" ]; then
        croak "smttst1.i is missing"
    fi
    if [ ! -f "smttst1.d" ]; then
        croak "smttst1.d is missing"
    fi
    if [ ! -f "smttst2.l" ]; then
        croak "smttst2.l is missing"
    fi
    if [ ! -f "smttst2.i" ]; then
        croak "smttst2.i is missing"
    fi
    if [ ! -f "smttst2.d" ]; then
        croak "smttst2.d is missing"
    fi
    if [ ! -f "smttst3.l" ]; then
        croak "smttst3.l is missing"
    fi
    if [ ! -f "smttst3.i" ]; then
        croak "smttst3.i is missing"
    fi
    if [ ! -f "smttst3.d" ]; then
        croak "smttst3.d is missing"
    fi
    if [ ! -f "smtmsg.c" ]; then
        croak "smtmsg.c is missing"
    fi
    if [ ! -f "smtmsg.h" ]; then
        croak "smtmsg.h is missing"
    fi
    if [ ! -f "smtsslm.c" ]; then
        croak "smtsslm.c is missing"
    fi
    if [ ! -f "smtsslm.h" ]; then
        croak "smtsslm.h is missing"
    fi
    if [ ! -f "sysmana.l" ]; then
        croak "sysmana.l is missing"
    fi
    if [ ! -f "sysmana.i" ]; then
        croak "sysmana.i is missing"
    fi
    if [ ! -f "sysmana.d" ]; then
        croak "sysmana.d is missing"
    fi
    if [ ! -f "sysclia.l" ]; then
        croak "sysclia.l is missing"
    fi
    if [ ! -f "sysclia.i" ]; then
        croak "sysclia.i is missing"
    fi
    if [ ! -f "sysclia.d" ]; then
        croak "sysclia.d is missing"
    fi
    if [ ! -f "tstpop.i" ]; then
        croak "tstpop.i is missing"
    fi
    if [ ! -f "tstpop.d" ]; then
        croak "tstpop.d is missing"
    fi
    if [ ! -f "tstsmtp.i" ]; then
        croak "tstsmtp.i is missing"
    fi
    if [ ! -f "tstsmtp.d" ]; then
        croak "tstsmtp.d is missing"
    fi
    if [ ! -f "smt3.h" ]; then
        croak "smt3.h is missing"
    fi
    if [ ! -f "stamp_generate" ]; then
        croak "stamp_generate is missing"
    fi
    if [ ! -f "boomakew.bat" ]; then
        croak "boomakew.bat is missing"
    fi
    if [ ! -f "configure" ]; then
        croak "configure is missing"
    fi
    if [ ! -f "Makefile.unix" ]; then
        croak "Makefile.unix is missing"
    fi
    if [ ! -f "boomake" ]; then
        croak "boomake is missing"
    fi
    if [ ! -f "configure.bat" ]; then
        croak "configure.bat is missing"
    fi
    if [ ! -f "Makefile.win32" ]; then
        croak "Makefile.win32 is missing"
    fi
    if [ ! -f "boomake.bat" ]; then
        croak "boomake.bat is missing"
    fi
    if [ ! -f "libsmt3.vcproj" ]; then
        croak "libsmt3.vcproj is missing"
    fi
}

# -----------------------   CHECK BINARY FILES EXIST   ------------------------

a_check_binary_files_exist() {
:
    if [ ! -f "smtlib.h" ]; then
        croak "smtlib.h is missing"
    fi
    if [ ! -f "smtsimu.h" ]; then
        croak "smtsimu.h is missing"
    fi
    if [ ! -f "smtmem.h" ]; then
        croak "smtmem.h is missing"
    fi
    if [ ! -f "smtschm.c" ]; then
        croak "smtschm.c is missing"
    fi
    if [ ! -f "smttest.gsl" ]; then
        croak "smttest.gsl is missing"
    fi
    if [ ! -f "smtexdr.gsl" ]; then
        croak "smtexdr.gsl is missing"
    fi
    if [ ! -f "smtmesg.gsl" ]; then
        croak "smtmesg.gsl is missing"
    fi
    if [ ! -f "libsmt3.a" ]; then
        croak "libsmt3.a is missing"
    fi
    if [ ! -f "readme.txt" ]; then
        croak "readme.txt is missing"
    fi
    if [ ! -f "smtmsg.h" ]; then
        croak "smtmsg.h is missing"
    fi
    if [ ! -f "smtsslm.h" ]; then
        croak "smtsslm.h is missing"
    fi
    if [ ! -f "smt3.h" ]; then
        croak "smt3.h is missing"
    fi
}

# ------------------------   CHECK OPERATING CONTEXT   ------------------------

a_check_operating_context() {
:
    if [ -f ./stamp_stripped ]; then
        event=stripped
    elif [ -f ./stamp_source ]; then
        event=source
    else
        event=repository
    fi
}

# -----------------------   CHECK PROJECT FILES EXIST   -----------------------

a_check_project_files_exist() {
:
    if [ ! -f "version.h" ]; then
        croak "version.h is missing"
    fi
    if [ ! -f "smtlib.c" ]; then
        croak "smtlib.c is missing"
    fi
    if [ ! -f "smtlib.h" ]; then
        croak "smtlib.h is missing"
    fi
    if [ ! -f "smtserv.c" ]; then
        croak "smtserv.c is missing"
    fi
    if [ ! -f "smttime.c" ]; then
        croak "smttime.c is missing"
    fi
    if [ ! -f "smtecho.c" ]; then
        croak "smtecho.c is missing"
    fi
    if [ ! -f "smtlog.c" ]; then
        croak "smtlog.c is missing"
    fi
    if [ ! -f "smtxlog.c" ]; then
        croak "smtxlog.c is missing"
    fi
    if [ ! -f "smtoper.c" ]; then
        croak "smtoper.c is missing"
    fi
    if [ ! -f "smtpipe.c" ]; then
        croak "smtpipe.c is missing"
    fi
    if [ ! -f "smtpop.c" ]; then
        croak "smtpop.c is missing"
    fi
    if [ ! -f "smtrdns.c" ]; then
        croak "smtrdns.c is missing"
    fi
    if [ ! -f "smtrdnsl.c" ]; then
        croak "smtrdnsl.c is missing"
    fi
    if [ ! -f "smtsimu.c" ]; then
        croak "smtsimu.c is missing"
    fi
    if [ ! -f "smtsimu.h" ]; then
        croak "smtsimu.h is missing"
    fi
    if [ ! -f "smtslot.c" ]; then
        croak "smtslot.c is missing"
    fi
    if [ ! -f "smtsmtp.c" ]; then
        croak "smtsmtp.c is missing"
    fi
    if [ ! -f "smtsock.c" ]; then
        croak "smtsock.c is missing"
    fi
    if [ ! -f "smttran.c" ]; then
        croak "smttran.c is missing"
    fi
    if [ ! -f "smttst1.c" ]; then
        croak "smttst1.c is missing"
    fi
    if [ ! -f "smttst2.c" ]; then
        croak "smttst2.c is missing"
    fi
    if [ ! -f "smttst3.c" ]; then
        croak "smttst3.c is missing"
    fi
    if [ ! -f "smtmem.h" ]; then
        croak "smtmem.h is missing"
    fi
    if [ ! -f "smtdefn.h" ]; then
        croak "smtdefn.h is missing"
    fi
    if [ ! -f "smthead.h" ]; then
        croak "smthead.h is missing"
    fi
    if [ ! -f "smtpriv.h" ]; then
        croak "smtpriv.h is missing"
    fi
    if [ ! -f "smtxlog.h" ]; then
        croak "smtxlog.h is missing"
    fi
    if [ ! -f "echocli.c" ]; then
        croak "echocli.c is missing"
    fi
    if [ ! -f "echod.c" ]; then
        croak "echod.c is missing"
    fi
    if [ ! -f "smtschm.c" ]; then
        croak "smtschm.c is missing"
    fi
    if [ ! -f "smttest.gsl" ]; then
        croak "smttest.gsl is missing"
    fi
    if [ ! -f "smtexdr.gsl" ]; then
        croak "smtexdr.gsl is missing"
    fi
    if [ ! -f "smtmesg.gsl" ]; then
        croak "smtmesg.gsl is missing"
    fi
    if [ ! -f "smtmsg.xml" ]; then
        croak "smtmsg.xml is missing"
    fi
    if [ ! -f "smtsslm.xml" ]; then
        croak "smtsslm.xml is missing"
    fi
    if [ ! -f "sysman.c" ]; then
        croak "sysman.c is missing"
    fi
    if [ ! -f "syscli.c" ]; then
        croak "syscli.c is missing"
    fi
    if [ ! -f "sysmana.c" ]; then
        croak "sysmana.c is missing"
    fi
    if [ ! -f "sysclia.c" ]; then
        croak "sysclia.c is missing"
    fi
    if [ ! -f "sysman.h" ]; then
        croak "sysman.h is missing"
    fi
    if [ ! -f "tstpop.c" ]; then
        croak "tstpop.c is missing"
    fi
    if [ ! -f "tstpop.l" ]; then
        croak "tstpop.l is missing"
    fi
    if [ ! -f "tstpop.cfg" ]; then
        croak "tstpop.cfg is missing"
    fi
    if [ ! -f "tstrdns.c" ]; then
        croak "tstrdns.c is missing"
    fi
    if [ ! -f "tstslot.c" ]; then
        croak "tstslot.c is missing"
    fi
    if [ ! -f "tstsmtp.c" ]; then
        croak "tstsmtp.c is missing"
    fi
    if [ ! -f "tstsmtp.l" ]; then
        croak "tstsmtp.l is missing"
    fi
    if [ ! -f "tstsmtp.cfg" ]; then
        croak "tstsmtp.cfg is missing"
    fi
    if [ ! -f "tstsock.c" ]; then
        croak "tstsock.c is missing"
    fi
    if [ ! -f "tsttime.c" ]; then
        croak "tsttime.c is missing"
    fi
    if [ ! -f "project.pdl" ]; then
        croak "project.pdl is missing"
    fi
    if [ ! -f "readme.txt" ]; then
        croak "readme.txt is missing"
    fi
    if [ ! -f "smtserv.h" ]; then
        croak "smtserv.h is missing"
    fi
    if [ ! -f "smttime.h" ]; then
        croak "smttime.h is missing"
    fi
    if [ ! -f "smtecho.l" ]; then
        croak "smtecho.l is missing"
    fi
    if [ ! -f "smtlog.l" ]; then
        croak "smtlog.l is missing"
    fi
    if [ ! -f "smtxlog.l" ]; then
        croak "smtxlog.l is missing"
    fi
    if [ ! -f "smtoper.l" ]; then
        croak "smtoper.l is missing"
    fi
    if [ ! -f "smtpipe.l" ]; then
        croak "smtpipe.l is missing"
    fi
    if [ ! -f "smtpop.l" ]; then
        croak "smtpop.l is missing"
    fi
    if [ ! -f "smtrdns.l" ]; then
        croak "smtrdns.l is missing"
    fi
    if [ ! -f "smtrdnsl.h" ]; then
        croak "smtrdnsl.h is missing"
    fi
    if [ ! -f "smtsimu.l" ]; then
        croak "smtsimu.l is missing"
    fi
    if [ ! -f "smtslot.l" ]; then
        croak "smtslot.l is missing"
    fi
    if [ ! -f "smtsmtp.l" ]; then
        croak "smtsmtp.l is missing"
    fi
    if [ ! -f "smtsock.l" ]; then
        croak "smtsock.l is missing"
    fi
    if [ ! -f "smttran.l" ]; then
        croak "smttran.l is missing"
    fi
    if [ ! -f "smttst1.l" ]; then
        croak "smttst1.l is missing"
    fi
    if [ ! -f "smttst2.l" ]; then
        croak "smttst2.l is missing"
    fi
    if [ ! -f "smttst3.l" ]; then
        croak "smttst3.l is missing"
    fi
    if [ ! -f "sysmana.l" ]; then
        croak "sysmana.l is missing"
    fi
    if [ ! -f "sysclia.l" ]; then
        croak "sysclia.l is missing"
    fi
    if [ ! -f "boomakew.bat" ]; then
        croak "boomakew.bat is missing"
    fi
    if [ ! -f "boomake" ]; then
        croak "boomake is missing"
    fi
    if [ ! -f "boomake.bat" ]; then
        croak "boomake.bat is missing"
    fi
}

# -----------------------   CHECK SOURCE FILES EXIST   ------------------------

a_check_source_files_exist() {
:
    if [ ! -f "version.h" ]; then
        croak "version.h is missing"
    fi
    if [ ! -f "smtlib.c" ]; then
        croak "smtlib.c is missing"
    fi
    if [ ! -f "smtlib.h" ]; then
        croak "smtlib.h is missing"
    fi
    if [ ! -f "smtserv.c" ]; then
        croak "smtserv.c is missing"
    fi
    if [ ! -f "smttime.c" ]; then
        croak "smttime.c is missing"
    fi
    if [ ! -f "smtecho.c" ]; then
        croak "smtecho.c is missing"
    fi
    if [ ! -f "smtlog.c" ]; then
        croak "smtlog.c is missing"
    fi
    if [ ! -f "smtxlog.c" ]; then
        croak "smtxlog.c is missing"
    fi
    if [ ! -f "smtoper.c" ]; then
        croak "smtoper.c is missing"
    fi
    if [ ! -f "smtpipe.c" ]; then
        croak "smtpipe.c is missing"
    fi
    if [ ! -f "smtpop.c" ]; then
        croak "smtpop.c is missing"
    fi
    if [ ! -f "smtrdns.c" ]; then
        croak "smtrdns.c is missing"
    fi
    if [ ! -f "smtrdnsl.c" ]; then
        croak "smtrdnsl.c is missing"
    fi
    if [ ! -f "smtsimu.c" ]; then
        croak "smtsimu.c is missing"
    fi
    if [ ! -f "smtsimu.h" ]; then
        croak "smtsimu.h is missing"
    fi
    if [ ! -f "smtslot.c" ]; then
        croak "smtslot.c is missing"
    fi
    if [ ! -f "smtsmtp.c" ]; then
        croak "smtsmtp.c is missing"
    fi
    if [ ! -f "smtsock.c" ]; then
        croak "smtsock.c is missing"
    fi
    if [ ! -f "smttran.c" ]; then
        croak "smttran.c is missing"
    fi
    if [ ! -f "smttst1.c" ]; then
        croak "smttst1.c is missing"
    fi
    if [ ! -f "smttst2.c" ]; then
        croak "smttst2.c is missing"
    fi
    if [ ! -f "smttst3.c" ]; then
        croak "smttst3.c is missing"
    fi
    if [ ! -f "smtmem.h" ]; then
        croak "smtmem.h is missing"
    fi
    if [ ! -f "smtdefn.h" ]; then
        croak "smtdefn.h is missing"
    fi
    if [ ! -f "smthead.h" ]; then
        croak "smthead.h is missing"
    fi
    if [ ! -f "smtpriv.h" ]; then
        croak "smtpriv.h is missing"
    fi
    if [ ! -f "smtxlog.h" ]; then
        croak "smtxlog.h is missing"
    fi
    if [ ! -f "echocli.c" ]; then
        croak "echocli.c is missing"
    fi
    if [ ! -f "echod.c" ]; then
        croak "echod.c is missing"
    fi
    if [ ! -f "smtschm.c" ]; then
        croak "smtschm.c is missing"
    fi
    if [ ! -f "smttest.gsl" ]; then
        croak "smttest.gsl is missing"
    fi
    if [ ! -f "smtexdr.gsl" ]; then
        croak "smtexdr.gsl is missing"
    fi
    if [ ! -f "smtmesg.gsl" ]; then
        croak "smtmesg.gsl is missing"
    fi
    if [ ! -f "smtmsg.xml" ]; then
        croak "smtmsg.xml is missing"
    fi
    if [ ! -f "smtsslm.xml" ]; then
        croak "smtsslm.xml is missing"
    fi
    if [ ! -f "sysman.c" ]; then
        croak "sysman.c is missing"
    fi
    if [ ! -f "syscli.c" ]; then
        croak "syscli.c is missing"
    fi
    if [ ! -f "sysmana.c" ]; then
        croak "sysmana.c is missing"
    fi
    if [ ! -f "sysclia.c" ]; then
        croak "sysclia.c is missing"
    fi
    if [ ! -f "sysman.h" ]; then
        croak "sysman.h is missing"
    fi
    if [ ! -f "tstpop.c" ]; then
        croak "tstpop.c is missing"
    fi
    if [ ! -f "tstpop.l" ]; then
        croak "tstpop.l is missing"
    fi
    if [ ! -f "tstpop.cfg" ]; then
        croak "tstpop.cfg is missing"
    fi
    if [ ! -f "tstrdns.c" ]; then
        croak "tstrdns.c is missing"
    fi
    if [ ! -f "tstslot.c" ]; then
        croak "tstslot.c is missing"
    fi
    if [ ! -f "tstsmtp.c" ]; then
        croak "tstsmtp.c is missing"
    fi
    if [ ! -f "tstsmtp.l" ]; then
        croak "tstsmtp.l is missing"
    fi
    if [ ! -f "tstsmtp.cfg" ]; then
        croak "tstsmtp.cfg is missing"
    fi
    if [ ! -f "tstsock.c" ]; then
        croak "tstsock.c is missing"
    fi
    if [ ! -f "tsttime.c" ]; then
        croak "tsttime.c is missing"
    fi
    if [ ! -f "project.pdl" ]; then
        croak "project.pdl is missing"
    fi
    if [ ! -f "readme.txt" ]; then
        croak "readme.txt is missing"
    fi
    if [ ! -f "smtserv.h" ]; then
        croak "smtserv.h is missing"
    fi
    if [ ! -f "smttime.h" ]; then
        croak "smttime.h is missing"
    fi
    if [ ! -f "smtecho.l" ]; then
        croak "smtecho.l is missing"
    fi
    if [ ! -f "smtecho.i" ]; then
        croak "smtecho.i is missing"
    fi
    if [ ! -f "smtecho.d" ]; then
        croak "smtecho.d is missing"
    fi
    if [ ! -f "smtlog.l" ]; then
        croak "smtlog.l is missing"
    fi
    if [ ! -f "smtlog.i" ]; then
        croak "smtlog.i is missing"
    fi
    if [ ! -f "smtlog.d" ]; then
        croak "smtlog.d is missing"
    fi
    if [ ! -f "smtxlog.l" ]; then
        croak "smtxlog.l is missing"
    fi
    if [ ! -f "smtxlog.i" ]; then
        croak "smtxlog.i is missing"
    fi
    if [ ! -f "smtxlog.d" ]; then
        croak "smtxlog.d is missing"
    fi
    if [ ! -f "smtoper.l" ]; then
        croak "smtoper.l is missing"
    fi
    if [ ! -f "smtoper.i" ]; then
        croak "smtoper.i is missing"
    fi
    if [ ! -f "smtoper.d" ]; then
        croak "smtoper.d is missing"
    fi
    if [ ! -f "smtpipe.l" ]; then
        croak "smtpipe.l is missing"
    fi
    if [ ! -f "smtpipe.i" ]; then
        croak "smtpipe.i is missing"
    fi
    if [ ! -f "smtpipe.d" ]; then
        croak "smtpipe.d is missing"
    fi
    if [ ! -f "smtpop.l" ]; then
        croak "smtpop.l is missing"
    fi
    if [ ! -f "smtpop.i" ]; then
        croak "smtpop.i is missing"
    fi
    if [ ! -f "smtpop.d" ]; then
        croak "smtpop.d is missing"
    fi
    if [ ! -f "smtrdns.l" ]; then
        croak "smtrdns.l is missing"
    fi
    if [ ! -f "smtrdns.i" ]; then
        croak "smtrdns.i is missing"
    fi
    if [ ! -f "smtrdns.d" ]; then
        croak "smtrdns.d is missing"
    fi
    if [ ! -f "smtrdnsl.h" ]; then
        croak "smtrdnsl.h is missing"
    fi
    if [ ! -f "smtsimu.l" ]; then
        croak "smtsimu.l is missing"
    fi
    if [ ! -f "smtsimu.i" ]; then
        croak "smtsimu.i is missing"
    fi
    if [ ! -f "smtsimu.d" ]; then
        croak "smtsimu.d is missing"
    fi
    if [ ! -f "smtslot.l" ]; then
        croak "smtslot.l is missing"
    fi
    if [ ! -f "smtslot.i" ]; then
        croak "smtslot.i is missing"
    fi
    if [ ! -f "smtslot.d" ]; then
        croak "smtslot.d is missing"
    fi
    if [ ! -f "smtsmtp.l" ]; then
        croak "smtsmtp.l is missing"
    fi
    if [ ! -f "smtsmtp.i" ]; then
        croak "smtsmtp.i is missing"
    fi
    if [ ! -f "smtsmtp.d" ]; then
        croak "smtsmtp.d is missing"
    fi
    if [ ! -f "smtsock.l" ]; then
        croak "smtsock.l is missing"
    fi
    if [ ! -f "smtsock.i" ]; then
        croak "smtsock.i is missing"
    fi
    if [ ! -f "smtsock.d" ]; then
        croak "smtsock.d is missing"
    fi
    if [ ! -f "smttran.l" ]; then
        croak "smttran.l is missing"
    fi
    if [ ! -f "smttran.i" ]; then
        croak "smttran.i is missing"
    fi
    if [ ! -f "smttran.d" ]; then
        croak "smttran.d is missing"
    fi
    if [ ! -f "smttst1.l" ]; then
        croak "smttst1.l is missing"
    fi
    if [ ! -f "smttst1.i" ]; then
        croak "smttst1.i is missing"
    fi
    if [ ! -f "smttst1.d" ]; then
        croak "smttst1.d is missing"
    fi
    if [ ! -f "smttst2.l" ]; then
        croak "smttst2.l is missing"
    fi
    if [ ! -f "smttst2.i" ]; then
        croak "smttst2.i is missing"
    fi
    if [ ! -f "smttst2.d" ]; then
        croak "smttst2.d is missing"
    fi
    if [ ! -f "smttst3.l" ]; then
        croak "smttst3.l is missing"
    fi
    if [ ! -f "smttst3.i" ]; then
        croak "smttst3.i is missing"
    fi
    if [ ! -f "smttst3.d" ]; then
        croak "smttst3.d is missing"
    fi
    if [ ! -f "smtmsg.c" ]; then
        croak "smtmsg.c is missing"
    fi
    if [ ! -f "smtmsg.h" ]; then
        croak "smtmsg.h is missing"
    fi
    if [ ! -f "smtsslm.c" ]; then
        croak "smtsslm.c is missing"
    fi
    if [ ! -f "smtsslm.h" ]; then
        croak "smtsslm.h is missing"
    fi
    if [ ! -f "sysmana.l" ]; then
        croak "sysmana.l is missing"
    fi
    if [ ! -f "sysmana.i" ]; then
        croak "sysmana.i is missing"
    fi
    if [ ! -f "sysmana.d" ]; then
        croak "sysmana.d is missing"
    fi
    if [ ! -f "sysclia.l" ]; then
        croak "sysclia.l is missing"
    fi
    if [ ! -f "sysclia.i" ]; then
        croak "sysclia.i is missing"
    fi
    if [ ! -f "sysclia.d" ]; then
        croak "sysclia.d is missing"
    fi
    if [ ! -f "tstpop.i" ]; then
        croak "tstpop.i is missing"
    fi
    if [ ! -f "tstpop.d" ]; then
        croak "tstpop.d is missing"
    fi
    if [ ! -f "tstsmtp.i" ]; then
        croak "tstsmtp.i is missing"
    fi
    if [ ! -f "tstsmtp.d" ]; then
        croak "tstsmtp.d is missing"
    fi
    if [ ! -f "smt3.h" ]; then
        croak "smt3.h is missing"
    fi
    if [ ! -f "stamp_generate" ]; then
        croak "stamp_generate is missing"
    fi
    if [ ! -f "boomakew.bat" ]; then
        croak "boomakew.bat is missing"
    fi
    if [ ! -f "configure" ]; then
        croak "configure is missing"
    fi
    if [ ! -f "Makefile.unix" ]; then
        croak "Makefile.unix is missing"
    fi
    if [ ! -f "boomake" ]; then
        croak "boomake is missing"
    fi
    if [ ! -f "configure.bat" ]; then
        croak "configure.bat is missing"
    fi
    if [ ! -f "Makefile.win32" ]; then
        croak "Makefile.win32 is missing"
    fi
    if [ ! -f "boomake.bat" ]; then
        croak "boomake.bat is missing"
    fi
    if [ ! -f "libsmt3.vcproj" ]; then
        croak "libsmt3.vcproj is missing"
    fi
}

# -------------------------   INSTALL DELIVERABLES   --------------------------

a_install_deliverables() {
:
    carp "Installing SMT into $_INSTALL_ROOT..."
    if [ ! -d "$_INSTALL_ROOT" ]; then
        if mkdir -p $_INSTALL_ROOT; then
            :
        else
            croak "Could not create directory \"$_INSTALL_ROOT\""
        fi
    fi
    mkdir -p $_INSTALL_ROOT/include/
    [ "$BOOM_TRACE" ] && echo "cp smtlib.h $_INSTALL_ROOT/include/"
    cp smtlib.h $_INSTALL_ROOT/include/ || croak "\"cp smtlib.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/smtlib.h"
    chmod 0644 $_INSTALL_ROOT/include/smtlib.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/smtlib.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp smtsimu.h $_INSTALL_ROOT/include/"
    cp smtsimu.h $_INSTALL_ROOT/include/ || croak "\"cp smtsimu.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/smtsimu.h"
    chmod 0644 $_INSTALL_ROOT/include/smtsimu.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/smtsimu.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp smtmem.h $_INSTALL_ROOT/include/"
    cp smtmem.h $_INSTALL_ROOT/include/ || croak "\"cp smtmem.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/smtmem.h"
    chmod 0644 $_INSTALL_ROOT/include/smtmem.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/smtmem.h\" failed"
    mkdir -p $_INSTALL_ROOT/bin/
    [ "$BOOM_TRACE" ] && echo "cp smtschm.c $_INSTALL_ROOT/bin/"
    cp smtschm.c $_INSTALL_ROOT/bin/ || croak "\"cp smtschm.c $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/smtschm.c"
    chmod 0644 $_INSTALL_ROOT/bin/smtschm.c || croak "\"chmod 0644 $_INSTALL_ROOT/bin/smtschm.c\" failed"
    [ "$BOOM_TRACE" ] && echo "cp smttest.gsl $_INSTALL_ROOT/bin/"
    cp smttest.gsl $_INSTALL_ROOT/bin/ || croak "\"cp smttest.gsl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/smttest.gsl"
    chmod 0644 $_INSTALL_ROOT/bin/smttest.gsl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/smttest.gsl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp smtexdr.gsl $_INSTALL_ROOT/bin/"
    cp smtexdr.gsl $_INSTALL_ROOT/bin/ || croak "\"cp smtexdr.gsl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/smtexdr.gsl"
    chmod 0644 $_INSTALL_ROOT/bin/smtexdr.gsl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/smtexdr.gsl\" failed"
    [ "$BOOM_TRACE" ] && echo "cp smtmesg.gsl $_INSTALL_ROOT/bin/"
    cp smtmesg.gsl $_INSTALL_ROOT/bin/ || croak "\"cp smtmesg.gsl $_INSTALL_ROOT/bin/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/bin/smtmesg.gsl"
    chmod 0644 $_INSTALL_ROOT/bin/smtmesg.gsl || croak "\"chmod 0644 $_INSTALL_ROOT/bin/smtmesg.gsl\" failed"
    mkdir -p $_INSTALL_ROOT/lib/
    [ "$BOOM_TRACE" ] && echo "cp libsmt3.a $_INSTALL_ROOT/lib/"
    cp libsmt3.a $_INSTALL_ROOT/lib/ || croak "\"cp libsmt3.a $_INSTALL_ROOT/lib/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/lib/libsmt3.a"
    chmod 0644 $_INSTALL_ROOT/lib/libsmt3.a || croak "\"chmod 0644 $_INSTALL_ROOT/lib/libsmt3.a\" failed"
    mkdir -p $_INSTALL_ROOT/bin/
    mkdir -p $_INSTALL_ROOT/doc/SMT/
    [ "$BOOM_TRACE" ] && echo "cp readme.txt $_INSTALL_ROOT/doc/SMT/"
    cp readme.txt $_INSTALL_ROOT/doc/SMT/ || croak "\"cp readme.txt $_INSTALL_ROOT/doc/SMT/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/doc/SMT/readme.txt"
    chmod 0644 $_INSTALL_ROOT/doc/SMT/readme.txt || croak "\"chmod 0644 $_INSTALL_ROOT/doc/SMT/readme.txt\" failed"
    mkdir -p $_INSTALL_ROOT/include/
    [ "$BOOM_TRACE" ] && echo "cp smtmsg.h $_INSTALL_ROOT/include/"
    cp smtmsg.h $_INSTALL_ROOT/include/ || croak "\"cp smtmsg.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/smtmsg.h"
    chmod 0644 $_INSTALL_ROOT/include/smtmsg.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/smtmsg.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp smtsslm.h $_INSTALL_ROOT/include/"
    cp smtsslm.h $_INSTALL_ROOT/include/ || croak "\"cp smtsslm.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/smtsslm.h"
    chmod 0644 $_INSTALL_ROOT/include/smtsslm.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/smtsslm.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cp smt3.h $_INSTALL_ROOT/include/"
    cp smt3.h $_INSTALL_ROOT/include/ || croak "\"cp smt3.h $_INSTALL_ROOT/include/\" failed"
    [ "$BOOM_TRACE" ] && echo "chmod 0644 $_INSTALL_ROOT/include/smt3.h"
    chmod 0644 $_INSTALL_ROOT/include/smt3.h || croak "\"chmod 0644 $_INSTALL_ROOT/include/smt3.h\" failed"
    if [ -f ./installer ]; then
    [ "$BOOM_TRACE" ] && echo "sh ./installer"
    sh ./installer || croak "\"sh ./installer\" failed"
    fi
}

# ----------------------   PRODUCE ALL GENERATED FILES   ----------------------

a_produce_all_generated_files() {
:
    carp "Generating files..."
    [ "$BOOM_TRACE" ] && echo "gsl3 -q -quiet:1 smtmsg.xml"
    gsl3 -q -quiet:1 smtmsg.xml || croak "\"gsl3 -q -quiet:1 smtmsg.xml\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl3 -q -quiet:1 smtsslm.xml"
    gsl3 -q -quiet:1 smtsslm.xml || croak "\"gsl3 -q -quiet:1 smtsslm.xml\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet tstpop.l"
    lr -quiet tstpop.l || croak "\"lr -quiet tstpop.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet tstsmtp.l"
    lr -quiet tstsmtp.l || croak "\"lr -quiet tstsmtp.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtecho.l"
    lr -quiet smtecho.l || croak "\"lr -quiet smtecho.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtlog.l"
    lr -quiet smtlog.l || croak "\"lr -quiet smtlog.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtxlog.l"
    lr -quiet smtxlog.l || croak "\"lr -quiet smtxlog.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtoper.l"
    lr -quiet smtoper.l || croak "\"lr -quiet smtoper.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtpipe.l"
    lr -quiet smtpipe.l || croak "\"lr -quiet smtpipe.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtpop.l"
    lr -quiet smtpop.l || croak "\"lr -quiet smtpop.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtrdns.l"
    lr -quiet smtrdns.l || croak "\"lr -quiet smtrdns.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtsimu.l"
    lr -quiet smtsimu.l || croak "\"lr -quiet smtsimu.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtslot.l"
    lr -quiet smtslot.l || croak "\"lr -quiet smtslot.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtsmtp.l"
    lr -quiet smtsmtp.l || croak "\"lr -quiet smtsmtp.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtsock.l"
    lr -quiet smtsock.l || croak "\"lr -quiet smtsock.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smttran.l"
    lr -quiet smttran.l || croak "\"lr -quiet smttran.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smttst1.l"
    lr -quiet smttst1.l || croak "\"lr -quiet smttst1.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smttst2.l"
    lr -quiet smttst2.l || croak "\"lr -quiet smttst2.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smttst3.l"
    lr -quiet smttst3.l || croak "\"lr -quiet smttst3.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet sysmana.l"
    lr -quiet sysmana.l || croak "\"lr -quiet sysmana.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet sysclia.l"
    lr -quiet sysclia.l || croak "\"lr -quiet sysclia.l\" failed"
    rm -f smt3.h
    [ "$BOOM_TRACE" ] && echo "cat smthead.h>>smt3.h"
    cat smthead.h>>smt3.h || croak "\"cat smthead.h>>smt3.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat smtlib.h>>smt3.h"
    cat smtlib.h>>smt3.h || croak "\"cat smtlib.h>>smt3.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat smtdefn.h>>smt3.h"
    cat smtdefn.h>>smt3.h || croak "\"cat smtdefn.h>>smt3.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat smttime.h>>smt3.h"
    cat smttime.h>>smt3.h || croak "\"cat smttime.h>>smt3.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat smtserv.h>>smt3.h"
    cat smtserv.h>>smt3.h || croak "\"cat smtserv.h>>smt3.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat smtmsg.h>>smt3.h"
    cat smtmsg.h>>smt3.h || croak "\"cat smtmsg.h>>smt3.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat smtsslm.h>>smt3.h"
    cat smtsslm.h>>smt3.h || croak "\"cat smtsslm.h>>smt3.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat smtrdnsl.h>>smt3.h"
    cat smtrdnsl.h>>smt3.h || croak "\"cat smtrdnsl.h>>smt3.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat smtxlog.h>>smt3.h"
    cat smtxlog.h>>smt3.h || croak "\"cat smtxlog.h>>smt3.h\" failed"
    echo "Source files successfully generated">stamp_generate
}

# ------------------------   PRODUCE GENERATED FILES   ------------------------

a_produce_generated_files() {
:
    carp "Generating files..."
    [ "$BOOM_TRACE" ] && echo "gsl3 -q -quiet:1 smtmsg.xml"
    gsl3 -q -quiet:1 smtmsg.xml || croak "\"gsl3 -q -quiet:1 smtmsg.xml\" failed"
    [ "$BOOM_TRACE" ] && echo "gsl3 -q -quiet:1 smtsslm.xml"
    gsl3 -q -quiet:1 smtsslm.xml || croak "\"gsl3 -q -quiet:1 smtsslm.xml\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet tstpop.l"
    lr -quiet tstpop.l || croak "\"lr -quiet tstpop.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet tstsmtp.l"
    lr -quiet tstsmtp.l || croak "\"lr -quiet tstsmtp.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtecho.l"
    lr -quiet smtecho.l || croak "\"lr -quiet smtecho.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtlog.l"
    lr -quiet smtlog.l || croak "\"lr -quiet smtlog.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtxlog.l"
    lr -quiet smtxlog.l || croak "\"lr -quiet smtxlog.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtoper.l"
    lr -quiet smtoper.l || croak "\"lr -quiet smtoper.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtpipe.l"
    lr -quiet smtpipe.l || croak "\"lr -quiet smtpipe.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtpop.l"
    lr -quiet smtpop.l || croak "\"lr -quiet smtpop.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtrdns.l"
    lr -quiet smtrdns.l || croak "\"lr -quiet smtrdns.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtsimu.l"
    lr -quiet smtsimu.l || croak "\"lr -quiet smtsimu.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtslot.l"
    lr -quiet smtslot.l || croak "\"lr -quiet smtslot.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtsmtp.l"
    lr -quiet smtsmtp.l || croak "\"lr -quiet smtsmtp.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smtsock.l"
    lr -quiet smtsock.l || croak "\"lr -quiet smtsock.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smttran.l"
    lr -quiet smttran.l || croak "\"lr -quiet smttran.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smttst1.l"
    lr -quiet smttst1.l || croak "\"lr -quiet smttst1.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smttst2.l"
    lr -quiet smttst2.l || croak "\"lr -quiet smttst2.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet smttst3.l"
    lr -quiet smttst3.l || croak "\"lr -quiet smttst3.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet sysmana.l"
    lr -quiet sysmana.l || croak "\"lr -quiet sysmana.l\" failed"
    [ "$BOOM_TRACE" ] && echo "lr -quiet sysclia.l"
    lr -quiet sysclia.l || croak "\"lr -quiet sysclia.l\" failed"
    rm -f smt3.h
    [ "$BOOM_TRACE" ] && echo "cat smthead.h>>smt3.h"
    cat smthead.h>>smt3.h || croak "\"cat smthead.h>>smt3.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat smtlib.h>>smt3.h"
    cat smtlib.h>>smt3.h || croak "\"cat smtlib.h>>smt3.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat smtdefn.h>>smt3.h"
    cat smtdefn.h>>smt3.h || croak "\"cat smtdefn.h>>smt3.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat smttime.h>>smt3.h"
    cat smttime.h>>smt3.h || croak "\"cat smttime.h>>smt3.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat smtserv.h>>smt3.h"
    cat smtserv.h>>smt3.h || croak "\"cat smtserv.h>>smt3.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat smtmsg.h>>smt3.h"
    cat smtmsg.h>>smt3.h || croak "\"cat smtmsg.h>>smt3.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat smtsslm.h>>smt3.h"
    cat smtsslm.h>>smt3.h || croak "\"cat smtsslm.h>>smt3.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat smtrdnsl.h>>smt3.h"
    cat smtrdnsl.h>>smt3.h || croak "\"cat smtrdnsl.h>>smt3.h\" failed"
    [ "$BOOM_TRACE" ] && echo "cat smtxlog.h>>smt3.h"
    cat smtxlog.h>>smt3.h || croak "\"cat smtxlog.h>>smt3.h\" failed"
    echo "Source files successfully generated">stamp_generate
}

# -----------------------   REMOVE GENERATED BINARIES   -----------------------

a_remove_generated_binaries() {
:
    rm -f libsmt3.a
    rm -f smtlib.o
    rm -f smtserv.o
    rm -f smttime.o
    rm -f smtecho.o
    rm -f smtlog.o
    rm -f smtxlog.o
    rm -f smtoper.o
    rm -f smtpipe.o
    rm -f smtpop.o
    rm -f smtrdns.o
    rm -f smtrdnsl.o
    rm -f smtsimu.o
    rm -f smtslot.o
    rm -f smtsmtp.o
    rm -f smtsock.o
    rm -f smttran.o
    rm -f smttst1.o
    rm -f smttst2.o
    rm -f smttst3.o
    rm -f echocli.o
    rm -f echocli
    rm -f echod.o
    rm -f echod
    rm -f smtmsg.o
    rm -f smtsslm.o
    rm -f sysman.o
    rm -f sysman
    rm -f syscli.o
    rm -f syscli
    rm -f sysmana.o
    rm -f sysclia.o
    rm -f tstpop.o
    rm -f tstpop
    rm -f tstrdns.o
    rm -f tstrdns
    rm -f tstslot.o
    rm -f tstslot
    rm -f tstsmtp.o
    rm -f tstsmtp
    rm -f tstsock.o
    rm -f tstsock
    rm -f tsttime.o
    rm -f tsttime
    rm -f smtmsg.o
    rm -f smtsslm.o
}

# -----------------------   REMOVE GENERATED SOURCES   ------------------------

a_remove_generated_sources() {
:
    rm -f smtecho.i
    rm -f smtecho.d
    rm -f smtlog.i
    rm -f smtlog.d
    rm -f smtxlog.i
    rm -f smtxlog.d
    rm -f smtoper.i
    rm -f smtoper.d
    rm -f smtpipe.i
    rm -f smtpipe.d
    rm -f smtpop.i
    rm -f smtpop.d
    rm -f smtrdns.i
    rm -f smtrdns.d
    rm -f smtsimu.i
    rm -f smtsimu.d
    rm -f smtslot.i
    rm -f smtslot.d
    rm -f smtsmtp.i
    rm -f smtsmtp.d
    rm -f smtsock.i
    rm -f smtsock.d
    rm -f smttran.i
    rm -f smttran.d
    rm -f smttst1.i
    rm -f smttst1.d
    rm -f smttst2.i
    rm -f smttst2.d
    rm -f smttst3.i
    rm -f smttst3.d
    rm -f smtmsg.c
    rm -f smtmsg.h
    rm -f smtsslm.c
    rm -f smtsslm.h
    rm -f sysmana.i
    rm -f sysmana.d
    rm -f sysclia.i
    rm -f sysclia.d
    rm -f tstpop.i
    rm -f tstpop.d
    rm -f tstsmtp.i
    rm -f tstsmtp.d
    rm -f smt3.h
    rm -f stamp_generate
    rm -f configure
    rm -f Makefile.unix
    rm -f configure.bat
    rm -f Makefile.win32
    rm -f libsmt3.vcproj
    rm -f smt_*.zip
    rm -f smt_*.tar.gz
}

# ------------------------   REPORT HELP INFORMATION   ------------------------

a_report_help_information() {
:
    echo "The commands you can currently use on this project are:"
    echo ""
    eval "actions_$state"
}

# ------------------------   REPORT PROJECT VERSION   -------------------------

a_report_project_version() {
:
    echo "smt-3.0c2"
}

# -------------------------   RUN REGRESSION TESTS   --------------------------

a_run_regression_tests() {
:
    #   Run local selftest script if present
    if [ -f ./selftest ]; then
    [ "$BOOM_TRACE" ] && echo "sh ./selftest"
    sh ./selftest || croak "\"sh ./selftest\" failed"
    fi
}

# ----------------------   USE SOURCE CONTROL REVISION   ----------------------

a_use_source_control_revision() {
:
    if [ -d .svn ]; then
        SVN_REVISION="`svn info | awk '/^Revision:/ { print $2 }'`"
    else
        SVN_REVISION="svn"
    fi
    MY_VERSION=${MY_VERSION}-${SVN_REVISION}
}

actions_initial() {
    return
}

actions_initial_check() {
    return
}

actions_repository() {
echo "build:"
    echo "  From the raw project sources, produces all generated files, and"
    echo "    compiles all source files."
echo "compile:"
    echo "  From the raw project sources, compiles all source files without any"
    echo "    code generation."
echo "clean:"
    echo "  When working with the raw project sources, removes all generated"
    echo "    source and binary files from the project directory."
echo "regen:"
    echo "  Produces generated files required for building using the"
    echo "    current model."
echo "allgen:"
    echo "  Produces all generated files."
echo "distrib:"
    echo "  Creates a source distribution for the project.  Note that binary"
    echo "    distributions can only be created at the product level."
echo "distsrc:"
    echo "  Equivalent to distrib, provided for compatibility."
echo "distrev:"
    echo "  Creates a source distribution for the project.  Builds distribution"
    echo "    packages based on source control version number. Note that binary"
    echo "    distributions can only be created at the product level."
actions_default
    return
}

actions_source() {
echo "build:"
    echo "  From the packaged sources, compiles all source files without any"
    echo "    code generation."
echo "clean:"
    echo "  When working with the packaged sources, removes all generated"
    echo "    binary files from the project directory."
echo "regen:"
    echo "  Produces generated files required for building using the"
    echo "    current model."
echo "allgen:"
    echo "  Produces all generated files."
actions_default
    return
}

actions_stripped() {
echo "build:"
    echo "  From the stripped-down packaged sources, compiles all source files"
    echo "    without any code generation."
echo "clean:"
    echo "  When working with the packaged sources, removes all generated"
    echo "    binary files from the project directory."
actions_default
    return
}

actions_default() {
echo "install:"
    echo "  Installs deliverables into the final or temporary install tree."
    echo "    This action is only valid after a successful build."
echo "test:"
    echo "  Runs regression tests for the project."
echo "help:"
    echo "  Shows a list of the commands allowed on the project."
echo "version:"
    echo "  Show project version."
    return
}

#   State machine starts here
#
firsttime=true
while [ "$1" -o "$firsttime" ]; do
  firsttime=
  state=initial
  event=ok
  debug=
  export state event debug
  while [ -n "$state" ]; do
    if [ "$inherit_state" ]; then
        check_state=$inherit_state
        inherit_state=
    else
        check_state=$state
    fi
    case "$check_state" in
    initial)
        if [ -n "$debug" ]; then
            echo "State: initial"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        ok)
            if [ -n "$debug" ]; then
                echo "Event: ok"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check operating context"
            fi
            if [ -z "$exception" ]; then
                a_check_operating_context
            fi
            state=initial_check
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        *)
            echo "Unknown command - use one of:"
            echo ""
            eval "actions_$state"
            exit 1
        ;;
        esac
    ;;
    initial_check)
        if [ -n "$debug" ]; then
            echo "State: initial check"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        repository)
            if [ -n "$debug" ]; then
                echo "Event: repository"
            fi
            event=
            exception=
            state=repository
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        source)
            if [ -n "$debug" ]; then
                echo "Event: source"
            fi
            event=
            exception=
            state=source
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        stripped)
            if [ -n "$debug" ]; then
                echo "Event: stripped"
            fi
            event=
            exception=
            state=stripped
            if [ -n "$exception" ]; then
                continue
            fi
        ;;
        *)
            echo "Unknown command - use one of:"
            echo ""
            eval "actions_$state"
            exit 1
        ;;
        esac
    ;;
    repository)
        if [ -n "$debug" ]; then
            echo "State: repository"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        build)
            if [ -n "$debug" ]; then
                echo "Event: build"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_generated_files
            fi
            if [ -n "$debug" ]; then
                echo "Action: check source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build binary files"
            fi
            if [ -z "$exception" ]; then
                a_build_binary_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        compile)
            if [ -n "$debug" ]; then
                echo "Event: compile"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build binary files"
            fi
            if [ -z "$exception" ]; then
                a_build_binary_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        clean)
            if [ -n "$debug" ]; then
                echo "Event: clean"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: remove generated sources"
            fi
            if [ -z "$exception" ]; then
                a_remove_generated_sources
            fi
            if [ -n "$debug" ]; then
                echo "Action: remove generated binaries"
            fi
            if [ -z "$exception" ]; then
                a_remove_generated_binaries
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        regen)
            if [ -n "$debug" ]; then
                echo "Event: regen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_generated_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        allgen)
            if [ -n "$debug" ]; then
                echo "Event: allgen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        distrib)
            if [ -n "$debug" ]; then
                echo "Event: distrib"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$debug" ]; then
                echo "Action: check all source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_all_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build source packages"
            fi
            if [ -z "$exception" ]; then
                a_build_source_packages
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        distsrc)
            if [ -n "$debug" ]; then
                echo "Event: distsrc"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$debug" ]; then
                echo "Action: check all source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_all_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build source packages"
            fi
            if [ -z "$exception" ]; then
                a_build_source_packages
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        distrev)
            if [ -n "$debug" ]; then
                echo "Event: distrev"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$debug" ]; then
                echo "Action: check all source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_all_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: use source control revision"
            fi
            if [ -z "$exception" ]; then
                a_use_source_control_revision
            fi
            if [ -n "$debug" ]; then
                echo "Action: build source packages"
            fi
            if [ -z "$exception" ]; then
                a_build_source_packages
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            inherit_state=default
        ;;
        esac
    ;;
    source)
        if [ -n "$debug" ]; then
            echo "State: source"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        build)
            if [ -n "$debug" ]; then
                echo "Event: build"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check source files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_source_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: build binary files"
            fi
            if [ -z "$exception" ]; then
                a_build_binary_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        clean)
            if [ -n "$debug" ]; then
                echo "Event: clean"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: remove generated binaries"
            fi
            if [ -z "$exception" ]; then
                a_remove_generated_binaries
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        regen)
            if [ -n "$debug" ]; then
                echo "Event: regen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_generated_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        allgen)
            if [ -n "$debug" ]; then
                echo "Event: allgen"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check project files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_project_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: produce all generated files"
            fi
            if [ -z "$exception" ]; then
                a_produce_all_generated_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            inherit_state=default
        ;;
        esac
    ;;
    stripped)
        if [ -n "$debug" ]; then
            echo "State: stripped"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        build)
            if [ -n "$debug" ]; then
                echo "Event: build"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: build binary files"
            fi
            if [ -z "$exception" ]; then
                a_build_binary_files
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        clean)
            if [ -n "$debug" ]; then
                echo "Event: clean"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: remove generated binaries"
            fi
            if [ -z "$exception" ]; then
                a_remove_generated_binaries
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            inherit_state=default
        ;;
        esac
    ;;
    default)
        if [ -n "$debug" ]; then
            echo "State: default"
        fi
        case "$event" in
        "")
            if [ -n "$debug" ]; then
                echo "Get event from user"
            fi
            if [ "$1" ]; then
                event=$1
                shift
            else
                event=empty
            fi
            continue
        ;;
        install)
            if [ -n "$debug" ]; then
                echo "Event: install"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check binary files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_binary_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: install deliverables"
            fi
            if [ -z "$exception" ]; then
                a_install_deliverables
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        test)
            if [ -n "$debug" ]; then
                echo "Event: test"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: check binary files exist"
            fi
            if [ -z "$exception" ]; then
                a_check_binary_files_exist
            fi
            if [ -n "$debug" ]; then
                echo "Action: run regression tests"
            fi
            if [ -z "$exception" ]; then
                a_run_regression_tests
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        help)
            if [ -n "$debug" ]; then
                echo "Event: help"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: report help information"
            fi
            if [ -z "$exception" ]; then
                a_report_help_information
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        version)
            if [ -n "$debug" ]; then
                echo "Event: version"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: report project version"
            fi
            if [ -z "$exception" ]; then
                a_report_project_version
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        empty)
            if [ -n "$debug" ]; then
                echo "Event: empty"
            fi
            event=
            exception=
            if [ -n "$debug" ]; then
                echo "Action: report help information"
            fi
            if [ -z "$exception" ]; then
                a_report_help_information
            fi
            if [ -n "$1" -a -z "$exception" ]; then
                continue 2
            fi
            state=
        ;;
        *)
            echo "Unknown command - use one of:"
            echo ""
            eval "actions_$state"
            exit 1
        ;;
        esac
    ;;
    esac
  done
done
